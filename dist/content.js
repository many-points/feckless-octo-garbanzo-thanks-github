// Generated by CoffeeScript 1.10.0
var add_event, add_event_to_existing_nodes, download_event, get_song_name, get_url, initial, observer, observer_config;

get_url = function(parent_object) {
  return $(parent_object).find("input").val();
};

get_song_name = function(parent_object) {
  var artist, song;
  artist = $(parent_object).find(".title_wrap b a").text().trim();
  song = $(parent_object).find(".title_wrap .title a").text().trim();
  if (song === "") {
    song = $(parent_object).find(".title_wrap .title").text().trim();
  }
  return artist + " \u2013 " + song;
};

download_event = function(event) {
  var name, options, parent, pos, url;
  event.preventDefault();
  parent = this.parentElement;
  url = get_url(parent);
  pos = url.indexOf('?');
  if (pos !== -1) {
    url = url.substr(0, pos);
  }
  name = ((get_song_name(parent)) + ".mp3").replace('/', '-');
  console.log(url + " " + name);
  options = {
    url: url,
    filename: name,
    conflictAction: 'uniquify'
  };
  chrome.runtime.sendMessage(options);
  return false;
};

add_event = function(node) {
  var button;
  button = $(node).find(".area.clear_fix")[0];
  return button.addEventListener("contextmenu", download_event, false);
};

add_event_to_existing_nodes = function() {
  var nodes;
  nodes = [].slice.call($(".audio"));
  return nodes.forEach(function(node) {
    return add_event(node);
  });
};

observer = new MutationObserver(function(mutations) {
  return mutations.forEach(function(mutation) {
    var nodes;
    nodes = [].slice.call(mutation.addedNodes);
    return nodes.forEach(function(node) {
      var audios;
      if (node.id === "wrap2" || "search_table") {
        audios = [].slice.call($(node).find(".audio"));
        audios.forEach(function(audio) {
          return add_event(audio);
        });
      }
      if (node.classList.contains("audio")) {
        return add_event(node);
      }
    });
  });
});

observer_config = {
  childList: true,
  subtree: true
};

add_event_to_existing_nodes();

initial = $("body")[0];

if (initial != null) {
  observer.observe(initial, observer_config);
}
