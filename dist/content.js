// Generated by CoffeeScript 1.10.0
var vkdl;

vkdl = {
  get_url: function(parent) {
    var input, pos;
    input = parent.querySelectorAll("input")[0];
    pos = input.value.indexOf('?');
    return input.value.substr(0, pos);
  },
  get_song_name: function(parent) {
    var name, title_wrap;
    title_wrap = parent.querySelectorAll(".title_wrap")[0];
    name = title_wrap.innerText.trim().replace('/', '-');
    return name + ".mp3";
  },
  download_file_event: function(event) {
    var name, options, parent, url;
    event.preventDefault();
    parent = this.parentElement;
    url = vkdl.get_url(parent);
    name = vkdl.get_song_name(parent);
    options = {
      url: url,
      filename: name,
      conflictAction: 'uniquify'
    };
    return console.log(name + " " + url);
  },
  add_event: function(node) {
    var button;
    button = node.querySelectorAll('.area.clear_fix')[0];
    button.addEventListener('contextmenu', this.download_file_event, false);
  },
  add_event_to_existing_nodes: function() {
    var nodes, that;
    that = this;
    nodes = document.querySelectorAll('.audio');
    [].forEach.call(nodes, function(node) {
      console.log(node);
      return that.add_event(node);
    });
  },
  observer: new MutationObserver(function(mutations) {
    mutations.forEach(function(mutation) {});
  }),
  start_observer: function() {
    var config, initial;
    config = {
      childList: true,
      subtree: true
    };
    initial = null;
    if (initial != null) {
      return this.observer.observe(initial, config);
    }
  }
};

vkdl.add_event_to_existing_nodes();
